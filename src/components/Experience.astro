---
import '../styles/global.css';
import experiencesJson from '../components/experience.json';
//const casualImages = import.meta.glob('../casual_images/*.jpg', {eager: true});
const casualImages = Object.values(import.meta.glob("../casual_images/*.jpg", {eager: true}));

---

<h1 id="experience-header">Experience and Education</h1>

  <div class="timeline">
    <div class="outer">
      {experiencesJson.map(expObj => (
      <div class="timeline-card">
        <div class="timeline-card-date-wrapper">
          <p class="timeline-card-date">{expObj.date}</p>
        </div>
        <p class="timeline-card-affiliation">{expObj.affiliation}</p>
        <div class="info">
          <h3 class="title">{expObj.title}</h3>
          <p>{expObj.description}</p>
        </div>
      </div>

    ))}
    </div>

<style>
* {
  margin: 0;
  padding: 0;
}

/* Timeline Container */
.timeline {

  margin: 20px auto 0px;
  padding: 20px;
  display:flex;
  justify-content:center;
  flex: 1;
  position: relative;
  background-color: var(--color2);
  box-shadow: 0px 15px 15px var(--color4) ;
}

/* Card container */
.timeline-card {
  position: relative;
  max-width: 400px;

}

/* setting padding based on even or odd */
.timeline-card:nth-child(odd) {
  padding: 30px 0 30px 30px;
}
.timeline-card:nth-child(even) {
  padding: 30px 30px 30px 0;
}
/* Global ::before */
.timeline-card::before {
  content: "";
  position: absolute;
  width: 50%;
  border: solid var(--color4);
}

/* Setting the border of top, bottom, left */
.timeline-card:nth-child(odd)::before {
  left: 0px;
  top: -4.5px;
  bottom: -4.5px;
  border-width: 5px 0 5px 5px;
  border-radius: 50px 0 0 50px;
}

/* Setting the top and bottom to "-5px" because earlier it was out of a pixel in mobile devices */
@media only screen and (max-width: 400px) {
  .timeline-card:nth-child(odd)::before {
    top: -5px;
    bottom: -5px;
  }
}

/* Setting the border of top, bottom, right */
.timeline-card:nth-child(even)::before {
  right: 0;
  top: 0;
  bottom: 0;
  border-width: 5px 5px 5px 0;
  border-radius: 0 50px 50px 0;
}

/* Removing the border if it is the first card */
.timeline-card:first-child::before {
  border-top: 0;
  border-top-left-radius: 0;
}

/* Removing the border if it is the last card  and it's odd */
.timeline-card:last-child:nth-child(odd)::before {
  border-bottom: 0;
  border-bottom-left-radius: 0;
}

/* Removing the border if it is the last card  and it's even */
.timeline-card:last-child:nth-child(even)::before {
  border-bottom: 0;
  border-bottom-right-radius: 0;
}

/* Information about the timeline */
.info {
  display: flex;
  flex-direction: column;
  background: black;
  color: gray;
  border-radius: 20px;
  padding: 10px;
}

p {
  color: var(--color4Light);
  font-family: "Chakra";
}

/* Title of the card */
.title {
  color: var(--color4);
  position: relative;
  font-family: "Doto";
}

/* Timeline dot  */
.title::before {
  content: "";
  position: absolute;
  width: 10px;
  height: 10px;
  background: var(--color5);
  border-radius: 999px;
  border: 3px solid var(--color4);
}

/* text right if the card is even  */
.timeline-card:nth-child(even) > .info > .title {
  text-align: right;
}

/* setting dot to the left if the card is odd */
.timeline-card:nth-child(odd) > .info > .title::before {
  left: -45px;
}

/* setting dot to the right if the card is odd */
.timeline-card:nth-child(even) > .info > .title::before {
  right: -45px;
}

.timeline-card-date-wrapper {
  position: absolute;
  top: 10px;
}

.timeline-card:nth-child(odd) .timeline-card-date-wrapper {
  right: calc(102%); /* date to the left of the left dot */
  text-align: right;
  display:block;
}

.timeline-card:nth-child(even) .timeline-card-date-wrapper {
  left: calc(102% ); /* date to the right of the right dot */
  text-align: left;
  display:block;
} 


.timeline-card-date{
  font-family: "Oswald";
  color: var(--color4);
}

@media (min-width: 700px){
 .timeline-card:nth-child(odd) .timeline-card-date-wrapper {
    right: calc(100% + 20px); /* date to the left of the left dot */
    text-align: right;
  }

  .timeline-card:nth-child(even) .timeline-card-date-wrapper {
    left: calc(100% + 20px); /* date to the right of the right dot */
    text-align: left;
  } 

  .timeline-card:nth-child(even) .timeline-card-date-wrapper .timeline-card-date {
    background-image: linear-gradient(90deg, var(--color4) 0%, var(--color4Dark) 60%);
  }

  .timeline-card:nth-child(odd) .timeline-card-date-wrapper .timeline-card-date {
    background-image: linear-gradient(90deg, var(--color4Dark) 40%,  var(--color4) 100%);
  }

  .timeline-card-date{
    font-family: "Oswald";
    font-size: 40px;
    color: transparent;
    background-clip: text;
  }
}







.timeline-wrapper{
  justify-content: space-around;
  display:inline-flex;
  overflow: hidden;
}


</style>


<script>
  const images = document.getElementsByClassName('drifting-image');
  let rect = document.getElementById("experience-header").getBoundingClientRect();
  let deadband=rect.bottom;


  let multipliers = [];

  for(let i=0; i<images.length; i++){
    multipliers.push(-((Math.floor(Math.random()*10)/15))+0.2);
    images[i].style.zIndex = i;
    images[i].style.left = `${Math.random() * 80 + 10}%`; // Random horizontal position

  }

  window.addEventListener('scroll', () => {
    

    let scrollY = window.scrollY;
    if(scrollY>deadband){
      scrollY=scrollY-deadband;
    }
    else{
      scrollY=0;
    }

    // Example: Translate element horizontally based on scroll
    for(let i=0; i<images.length; i++){
      const translateY = scrollY * multipliers[i]; // Adjust the multiplier for desired effect
      images[i].style.transform = `translateY(${translateY}px)`;
    }
  });

</script>