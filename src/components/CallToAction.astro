---
import '../styles/global.css';
import Footer from '../components/Footer.astro';
---
<div id="call-to-action-cover"/>
<div id="call-to-action-div">
    <div id="padded-footer" style="padding: 0% 10% 40px;">
        <h1 style="text-align: left">What's next? That's where you come in.</h1>
        <p>I'd love to chat about opportunities, project ideas, or memes. Go ahead, click those buttons (you wanna see what happens).</p>
        <a href="mailto:nalrajab01@gmail.com" class="call-to-action-button">CONTACT ME</a>
        <button id="cool-secret-button" class="call-to-action-button">DANGEROUS BUTTON DO NOT CLICK!!!</button>
        <!--<a href="http://www.cornify.com" onclick="cornify_add();return false;" title="Cornify"><img src="https://www.cornify.com/assets/cornify-button.png" width="82" height="25" border="0" alt="Cornify" /></a><script type="text/javascript" src="https://www.cornify.com/js/cornify.js"></script>-->
    </div>
    <div id="footer-div">
        <Footer />
    </div>
</div>




<style>
    #call-to-action-div{
        z-index:-1;
        bottom: 0;
        position: -webkit-sticky;
        position:sticky;
        background-color: black;
        padding-top: 20px;
    }
    #call-to-action-cover{
        position: absolute;
        background-image: linear-gradient(to top, transparent 60px, var(--color2) 60px, var(--color2) 0);
        padding-top: 20px;
    }

    .call-to-action-button{
        font-size: 30px;
        text-decoration: none;
        outline: inset 2px var(--color4);
        margin-bottom:8px;
        padding:5px;
        width: 100%;
        color:var(--color4);
        font-family: "Chakra";
        display:flex;
        /*outline: 2px solid var(--color3)*/
        background-color: transparent;
        border:none;
        box-sizing: border-box;
        cursor: pointer;
    }

    #cool-secret-button{
        outline: inset 2px red;
        color: red;
    }
    


</style>

<script>
    const grid = document.getElementById("virus-grid");
	const btn = document.getElementById("cool-secret-button");
    const deathRandThreshold = 0.9;
    const infectRandThreshold = 0.5;

    const cellSize=10;
    let cols, rows;
    let cells=[];

    function createGrid(){
        cols=Math.ceil(window.innerWidth/cellSize);
        rows = Math.ceil(window.innerHeight/cellSize);
        console.debug("rows= "+rows.toString());
        console.debug("cols= "+cols.toString());
        grid.style.gridTemplateColumns = `repeat(${cols}, ${cellSize}px)`;
        grid.style.gridTemplateRows = `repeat(${rows}, ${cellSize}px)`;

        for(let r=0; r<rows; r++){
            cells[r] = [];
            for(let c=0; c<cols; c++){
                const cell=document.createElement("div");
                cell.className = "virus-cell";
                grid?.appendChild(cell);
                cells[r][c] = cell;
            }
        }
    }

    function infectScreen(){
        function infect(row, col){
            if(Math.random()>infectRandThreshold){
                if(row>=0 && row<rows  && col>=0 && col<cols && !cells[row][col].classList.contains("infected")){
                    cells[row][col].classList.add("infected");
                }
            }
        }

        function kill(row, col){
            if(Math.random()>deathRandThreshold){
                if(row>=0 && row<rows  && col>=0 && col<cols && !cells[row][col].classList.contains("dead")){
                    cells[row][col].classList.remove("infected");
                    cells[row][col].classList.add("dead");
                }
            }
        }
        let randomPoints = Array.from({ length: 20 }, () => ({
            row: Math.floor(Math.random() * rows),
            col: Math.floor(Math.random() * cols)
        }));

        randomPoints.forEach(({ row, col }) => infect(row, col));

        const interval = setInterval(() => {
            let sawNonBlackCell = false;
            let prevCells = []; // transparent 0, infected 1, dead 2
            for(let r=0; r<rows; r++){
                let prevCells_row=[];
                for(let c=0; c<cols; c++){
                    if(cells[r][c].classList.contains("dead")){
                        prevCells_row[c]=2;
                    }
                    else if(cells[r][c].classList.contains("infected")){
                        prevCells_row[c]=1;
                    }
                    else{
                        prevCells_row[c]=0;
                    }
                }
                prevCells[r]=prevCells_row;
            }

            /*for(let r=0; r<rows; r++){
                if(cells[r][left]) cells[r][left].classList.add("infected");
                if(cells[r][right]) cells[r][right].classList.add("infected");
            }*/

            for(let r=0; r<rows; r++){
                for(let c=0; c<cols; c++){
                    //console.debug("("+r.toString()+", "+c.toString()+")");
                    if(prevCells[r][c]==1){
                        cells[r][c].classList.remove("infected");
                        cells[r][c].classList.add("dead");
                        infect(r-1, c-1);
                        infect(r-1, c);
                        infect(r-1, c+1);
                        infect(r, c-1);
                        infect(r, c+1);
                        infect(r+1, c-1);
                        infect(r+1, c);
                        infect(r+1, c+1);
                        sawNonBlackCell=true;

                    }
                    else if(prevCells[r][c]==2){
                        kill(r-1, c-1);
                        kill(r-1, c);
                        kill(r-1, c+1);
                        kill(r, c-1);
                        kill(r, c+1);
                        kill(r+1, c-1);
                        kill(r+1, c);
                        kill(r+1, c+1);
                    }
                    else{
                        sawNonBlackCell=true;
                    }
                }
            }

            if(sawNonBlackCell==false){
                clearInterval(interval);
                // hire me please
                document.getElementById("virus-grid-text")?.classList.add("virus-animation-done");
                return;
            }

            /*left++;
            right--;*/
        }, 100); // lower=faster
    }

    btn?.addEventListener("click", () => {
        createGrid();
        infectScreen();
    })
</script>
