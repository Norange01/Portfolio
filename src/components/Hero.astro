---
import CubeScene from '../components/CubeScene.jsx';
import '../styles/global.css';
---

<div id="hero-div">
    <h1 id="hi-im-noor" style="margin: 0 60px 0 60px;">Hi, I'm <span class="highlight">Noor</span>.</h1>
    <h1 style="margin: 0 60px 0 60px;" id="role">A <div class="changing-role-container"><span class="role-placeholder glitch"/><span class="replaceable-word">Mechatronics</span></div> and <div class="changing-role-container"><span class="role-placeholder glitch"/><span class="replaceable-word">Biomedical</span></div> <div class="changing-role-container"><span class="role-placeholder glitch"/><span class="replaceable-word">Engineer</span></div> in <div class="changing-role-container"><span class="role-placeholder glitch"/><span class="replaceable-word">Training</span></div>.</h1>
    <p>
    <a href="https://www.linkedin.com/in/noor-al-rajab/"><svg xmlns="http://www.w3.org/2000/svg" data-name="Layer 1" viewBox="0 0 24 24" id="linkedin" class="contact-icons"><path d="M20.47,2H3.53A1.45,1.45,0,0,0,2.06,3.43V20.57A1.45,1.45,0,0,0,3.53,22H20.47a1.45,1.45,0,0,0,1.47-1.43V3.43A1.45,1.45,0,0,0,20.47,2ZM8.09,18.74h-3v-9h3ZM6.59,8.48h0a1.56,1.56,0,1,1,0-3.12,1.57,1.57,0,1,1,0,3.12ZM18.91,18.74h-3V13.91c0-1.21-.43-2-1.52-2A1.65,1.65,0,0,0,12.85,13a2,2,0,0,0-.1.73v5h-3s0-8.18,0-9h3V11A3,3,0,0,1,15.46,9.5c2,0,3.45,1.29,3.45,4.06Z"></path></svg></a>
    <a href="mailto:nalrajab01@gmail.com"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" id="envelope" class="contact-icons"><path d="M19,4H5A3,3,0,0,0,2,7V17a3,3,0,0,0,3,3H19a3,3,0,0,0,3-3V7A3,3,0,0,0,19,4Zm-.41,2-5.88,5.88a1,1,0,0,1-1.42,0L5.41,6ZM20,17a1,1,0,0,1-1,1H5a1,1,0,0,1-1-1V7.41l5.88,5.88a3,3,0,0,0,4.24,0L20,7.41Z"></path></svg></a>
    <a href="https://github.com/Norange01"><svg xmlns="http://www.w3.org/2000/svg" data-name="Layer 1" viewBox="0 0 24 24" id="github" class="contact-icons"><path d="M12,2.2467A10.00042,10.00042,0,0,0,8.83752,21.73419c.5.08752.6875-.21247.6875-.475,0-.23749-.01251-1.025-.01251-1.86249C7,19.85919,6.35,18.78423,6.15,18.22173A3.636,3.636,0,0,0,5.125,16.8092c-.35-.1875-.85-.65-.01251-.66248A2.00117,2.00117,0,0,1,6.65,17.17169a2.13742,2.13742,0,0,0,2.91248.825A2.10376,2.10376,0,0,1,10.2,16.65923c-2.225-.25-4.55-1.11254-4.55-4.9375a3.89187,3.89187,0,0,1,1.025-2.6875,3.59373,3.59373,0,0,1,.1-2.65s.83747-.26251,2.75,1.025a9.42747,9.42747,0,0,1,5,0c1.91248-1.3,2.75-1.025,2.75-1.025a3.59323,3.59323,0,0,1,.1,2.65,3.869,3.869,0,0,1,1.025,2.6875c0,3.83747-2.33752,4.6875-4.5625,4.9375a2.36814,2.36814,0,0,1,.675,1.85c0,1.33752-.01251,2.41248-.01251,2.75,0,.26251.1875.575.6875.475A10.0053,10.0053,0,0,0,12,2.2467Z"></path></svg>
    </a>
    </p>
    <p>But wait, there's more...</p>
    <!--CubeScene client:load /-->
    <div id="nav-bar">

        <div style="display:flex;">
            <li id="navbar-noor"><span id="navbar-noor-span" class="noor-span-hidden">Noor</span></li>
            <ul id="navbar-ul">
                <li class="navbar-li"><button class="nav-bar-item" id="nav-bar-projects-btn">Projects</button></li>
                <li class="navbar-li"><button class="nav-bar-item" id="nav-bar-experience-btn">Experience</button></li>
                <li class="navbar-li"><button class="nav-bar-item" id="nav-bar-contact-btn">Contact Me</button></li>
            </ul>
        </div>
        <div id="nav-bar-outline"/>
    </div>
    
</div>
<style>
    #navbar-noor{
        display:inline;
        list-style:none;
        margin: 0px 15px 0px;
        padding: 0px;
        font-family: 'Jersey15';
        background: transparent;
        color: var(--color4);
        font-size: 40px;
        overflow:hidden;
    }

    #navbar-noor-span{
        position:absolute;
        top:0;

    }

    .noor-span-entry{
        animation: slideIn 3s 1 forwards;
        opacity:1;

    }

    .noor-span-exit{
        animation: slideOut 3s 1 forwards;
        opacity:1;

    }

    .noor-span-hidden{
        opacity: 0;
    }
    

    @keyframes slideOut {
    0%   { transform: translateY(0); }
    100% { transform: translateY(-12.25rem); }
    }

    @keyframes slideIn {
    0%   { transform: translateY(-12.25rem); }
    100% { transform: translateY(0); }
    }


    .navbar-li{
        list-style: none;
        display: inline;
        margin: 0 15px;
    }

    #nav-bar{
        display: flex;
        flex-direction: column;
        position: fixed; 
        top:0;
        overflow:hidden;
        width:100%; 
        justify-content: space-between; 
        background-color: var(--color2);
        z-index: 5;
    }
    #nav-bar-outline{
        display: flex;
        position: relative; 
        width:100%; 
        height:2px;
        background-image: linear-gradient(90deg,var(--color4) 0%, var(--color2) 25%, var(--color2) 75%,var(--color4) 100%);
    }
    #navbar-ul{
        margin: 10px 10px 10px auto;
    }
    .nav-bar-item{
        font-family: 'Chakra';
        border: none;
        background: transparent;
        color: var(--color4);
        font-size: 20px;
        cursor: pointer;
    }
    .nav-bar-item:hover{
        background-color: var(--color4);
        color:var(--color2);
    }
    .changing-role-container{
        display: inline-flex;
        position: relative;
    }


    .role-placeholder{
        display: none;
        position: absolute;
        align-items: center;
    }

    .replaceable-word{
        visibility:visible;
        position: relative;
    }

    .highlight {
        color: var(--color4Dark);
        animation: highlightAnimation 2s ease-in-out forwards;
    }

    .highlighted-role {
        color: var(--color2);
        display: inline-block;
        width: 100%;
    }

    .changing-role-container:has(.highlighted-role){
        background-color: var(--color4);
    }


    .glitch {

    text-shadow: 0.05em 0 0 rgba(255, 0, 0, 0.75),
        -0.025em -0.05em 0 rgba(163, 255, 163, 0.75),
        0.025em 0.05em 0 rgba(0, 0, 255, 0.75);

    animation: glitch 250ms infinite;
    }

    .glitch span {
    position: absolute;
    top: 0;
    left: 0;
    }

    .glitch span:first-child {
    animation: glitch 650ms infinite;
    clip-path: polygon(0 0, 100% 0, 100% 45%, 0 45%);
    transform: translate(-0.025em, -0.0125em);
    /* color: green; */
    opacity: 0.8;
    }

    .glitch span:last-child {
    animation: glitch 200ms infinite;
    clip-path: polygon(0 80%, 100% 20%, 100% 100%, 0 100%);
    transform: translate(0.0125em, 0.025em);
    /* color: red; */
    opacity: 0.8;
    }

    /* https://web.dev/prefers-reduced-motion/#(bonus)-forcing-reduced-motion-on-all-websites */

    @keyframes glitch {
    0% {
        text-shadow: 0.05em 0 0 rgba(255, 0, 0, 0.75),
        -0.05em -0.025em 0 rgba(163, 255, 163, 0.75),
        -0.025em 0.05em 0 rgba(0, 0, 255, 0.75);
    }
    14% {
        text-shadow: 0.05em 0 0 rgba(255, 0, 0, 0.75),
        -0.05em -0.025em 0 rgba(163, 255, 163, 0.75),
        -0.025em 0.05em 0 rgba(0, 0, 255, 0.75);
    }
    15% {
        text-shadow: -0.05em -0.025em 0 rgba(255, 0, 0, 0.75),
        0.025em 0.025em 0 rgba(163, 255, 163, 0.75),
        -0.05em -0.05em 0 rgba(0, 0, 255, 0.75);
    }
    49% {
        text-shadow: -0.05em -0.025em 0 rgba(255, 0, 0, 0.75),
        0.025em 0.025em 0 rgba(163, 255, 163, 0.75),
        -0.05em -0.05em 0 rgba(0, 0, 255, 0.75);
    }
    50% {
        text-shadow: 0.025em 0.05em 0 rgba(255, 0, 0, 0.75),
        0.05em 0 0 rgba(163, 255, 163, 0.75), 0 -0.05em 0 rgba(0, 0, 255, 0.75);
    }
    99% {
        text-shadow: 0.025em 0.05em 0 rgba(255, 0, 0, 0.75),
        0.05em 0 0 rgba(163, 255, 163, 0.75), 0 -0.05em 0 rgba(0, 0, 255, 0.75);
    }
    100% {
        text-shadow: -0.025em 0 0 rgba(255, 0, 0, 0.75),
        -0.025em -0.025em 0 rgba(163, 255, 163, 0.75),
        -0.025em -0.05em 0 rgba(0, 0, 255, 0.75);
    }
    }

    @media (prefers-reduced-motion: reduce) {
    *,
    ::before,
    ::after {
        animation-delay: -1ms !important;
        animation-duration: 1ms !important;
        animation-iteration-count: 1 !important;
        background-attachment: initial !important;
        scroll-behavior: auto !important;
        transition-duration: 0s !important;
        transition-delay: 0s !important;
    }
    }

</style>
<script>
    const navProjectsButton = document.getElementById('nav-bar-projects-btn');
    const navExperienceButton = document.getElementById('nav-bar-experience-btn');
    const navContactButton = document.getElementById('nav-bar-contact-btn');

    navProjectsButton.addEventListener('mousedown', gotoProjects);
    navExperienceButton.addEventListener('mousedown', gotoExperience);
    navContactButton.addEventListener('mousedown', gotoContact);

    const experienceHeader = document.getElementById('experience-header');
    const projectsHeader = document.getElementById('projects-header');
    const footer = document.getElementById('call-to-action-div');

    function gotoProjects(){
        projectsHeader.scrollIntoView();
    }

    function gotoExperience(){
        experienceHeader.scrollIntoView();
    }

    function gotoContact(){
        footer.scrollIntoView();
    }

    const roles = ["artist", "techie", "tutor", "writer", "mentor"];
    const fonts= ["ArtistFont", "ProgrammerFont", "TutorFont", "Times New Roman, serif", "MentorFont"];
    const rolePlaceholderElems = document.getElementsByClassName("role-placeholder");
    const replaceableRoleElems= document.getElementsByClassName("replaceable-word");
    let counter = 0;

    function returnToDefault(){

        for(let i=0; i<rolePlaceholderElems.length; i++){
            rolePlaceholderElems[i].classList.remove("highlighted-role");
            replaceableRoleElems[i].style.visibility='visible';
            rolePlaceholderElems[i].style.display="none";
        }

    }

    function myTimer() {
       
        // Choose word to replace
        let wordToReplace =Math.round(Math.random() * 3);
        rolePlaceholderElems[wordToReplace].textContent=roles[counter];
        rolePlaceholderElems[wordToReplace].style.fontFamily=fonts[counter];
        rolePlaceholderElems[wordToReplace].classList.add("highlighted-role");
        rolePlaceholderElems[wordToReplace].style.display="inline-block";
        replaceableRoleElems[wordToReplace].style.visibility='hidden';
        counter = (counter + 1) % roles.length;
        setTimeout(returnToDefault, 800);

        // Schedule the next call with a new random delay
        const randomDelay = Math.floor(Math.random() * (5000-1000)) + 1000; // 1000–5000 ms
        setTimeout(myTimer, randomDelay);
    }

    // Start the loop
    myTimer();

    const hero = document.getElementById('hero-div');
    const noorSpan = document.getElementById('navbar-noor-span');
    noorSpan.addEventListener("animationend", () => {
        if(noorSpan.classList.contains("noor-span-exit")){
            noorSpan.classList.add("noor-span-hidden");
        }
        noorSpan.classList.remove("noor-span-entry", "noor-span-exit");
    });


    const observer = new IntersectionObserver(([entry]) => {
        if (!entry.isIntersecting) {
            // Hero is out of view – scroll down
            noorSpan.classList.remove('noor-span-exit');
            void noorSpan.offsetWidth;
            noorSpan.classList.remove('noor-span-hidden');
            noorSpan.classList.add('noor-span-entry');
        } else {
            // Hero is in view – scroll up
            noorSpan.classList.remove('noor-span-entry');
            void noorSpan.offsetWidth;
            noorSpan.classList.add('noor-span-exit');
        }
    }, { threshold: 0.5 });

    observer.observe(hero);

</script>
