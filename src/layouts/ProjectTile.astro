---
import '../styles/global.css'
import AcademicIcon from '../icons/AcademicIcon.astro'
import PersonalIcon from '../icons/PersonalIcon.astro'
import WorkIcon from '../icons/WorkIcon.astro'
import PlayIcon from '../icons/PlayIcon.astro'
import GithubIcon from '../icons/GithubIcon.astro'
import Tag from '../layouts/Tag.astro'
import 'animate.css';


export interface Props {
  type: string;
  affiliation: string;
  title: string;
  videoLink?: string;
  githubLink?: string;
  tags: Array<string>;
  images: Array<string>;
  imageHeight: string;    
}

const { type, affiliation, title, videoLink="" , githubLink="", tags, images, imageHeight} = Astro.props as Props;

let videoAvailable=videoLink!=="";
let numImages=images.length;
let videoIsLocal = true;
if(videoLink.includes("http")){
    videoIsLocal=false;
}
let githubAvailable=githubLink!=="";
---


<div class={"card "+title.toLowerCase().replace(/\s+/g, '-').replace(/[^\w-]/g, '') + "-div"} >
    <div style="display:flex; justify-content: space-between">
        <div class="tile-top">{type=='academic project'?<AcademicIcon/>:(type=='work project'?<WorkIcon/>:<PersonalIcon/>)} {type}</div>
        <div class="tile-top">{affiliation}</div>
            
        </div>
    <div class="card-content">
        <h2>
            {title}
        </h2>
        <p class="card-description">
            <slot/>
        </p>
        <div id={title.toLowerCase().replace(/\s+/g, '-').replace(/[^\w-]/g, '') + "-image-container"} class="card-image-container">
        {(numImages>0) && (
            ((images.map((imageName) => (<img src={"/project_images/"+imageName+".png"} alt={imageName} class={"card-image "+title.toLowerCase().replace(/\s+/g, '-').replace(/[^\w-]/g, '') + "-image"} style={"object-fit: cover; width: auto; max-width: 100%; height: "+imageHeight}/>))))
            
            )}
        </div>
        {videoAvailable && (
            !videoIsLocal && (
                <a href={videoLink} class="highlightable-button" target="_blank" rel="noopener noreferrer">
                    <PlayIcon /> WATCH VIDEO
                </a>
            ) 
            || videoIsLocal && ( /*PLACE HOLDER */
                <a href={videoLink} class="highlightable-button" target="_blank" rel="noopener noreferrer">
                    <PlayIcon /> WATCH VIDEO
                </a>
            ))}
        {githubAvailable && (
            <a href={githubLink} class="highlightable-button" target="_blank" rel="noopener noreferrer"><GithubIcon/>  GITHUB REPO</a>
            )}
        <div class="separator">
            <div class="separator__separator"></div>
        </div>

        <div>
            {tags.map((tag) => (
                <Tag>{tag=="CPP"?"C++":(tag=="CS"?"C#":tag)}</Tag>
            ))}
        </div>
    </div>
</div>

<script define:vars={{title}}>
    let slideIndex = 0;
    let popupSlideIndex = 0;
    let intervalId;
    let slides = document.getElementsByClassName(title.toLowerCase().replace(/\s+/g, '-').replace(/[^\w-]/g, '') + "-image");
    const cardDiv = document.getElementsByClassName(title.toLowerCase().replace(/\s+/g, '-').replace(/[^\w-]/g, '') + "-div")[0];
    const popupDiv = document.getElementById('popup-div');
    const maxedImages = document.getElementsByClassName(title.toLowerCase().replace(/\s+/g, '-').replace(/[^\w-]/g, '')+"-popup-image");
    const cardImageContainer = document.getElementById(title.toLowerCase().replace(/\s+/g, '-').replace(/[^\w-]/g, '') + "-image-container");
    
    const leftArrow = document.getElementById("left-arrow-div");
    const rightArrow = document.getElementById("right-arrow-div");
    
    cardDiv.addEventListener('mouseover', activateSlides);
    cardDiv.addEventListener('mouseleave', pauseSlides);
    cardImageContainer.addEventListener('mousedown', maximizeImage);

    leftArrow.addEventListener('mousedown', prevImage);
    rightArrow.addEventListener('mousedown', nextImage);

    let slidesActive=false;
    showSlides();

    function activateSlides(){
        slidesActive=true;
    }
    function pauseSlides(){
        slidesActive=false;
        if(slides.length>0){
            clearTimeout(intervalId);
            for (i = 0; i < slides.length; i++) {
                slides[i].style.display = "none";  
            }
            slideIndex=0
            slides[0].style.display = "block";
            showSlides();
        }
    }

    function showSlides() {
        let i;
        if(slides.length>0){
            if(slidesActive){
                for (i = 0; i < slides.length; i++) {
                    slides[i].style.display = "none";  
                }
                slideIndex++;
                if (slideIndex >= slides.length) {slideIndex = 0}    
                slides[slideIndex].style.display = "block";
            }
            else{
                for (i = 0; i < slides.length; i++) {
                    slides[i].style.display = "none";  
                }
                slideIndex=0
                slides[0].style.display = "block";
            }
        }
        intervalId = setTimeout(showSlides, 1000);
    }

    function maximizeImage(){
        popupDiv.classList.add("show");
        maxedImages[0].classList.add("show");
    }

    function nextImage(){
        maxedImages[popupSlideIndex].classList.remove("show");
        popupSlideIndex=(popupSlideIndex+1)%maxedImages.length;
        maxedImages[popupSlideIndex].classList.add("show");
    }

    function prevImage(){
        maxedImages[popupSlideIndex].classList.remove("show");
        popupSlideIndex=(popupSlideIndex-1);
        if(popupSlideIndex<0){popupSlideIndex=maxedImages.length-1;}
        maxedImages[popupSlideIndex].classList.add("show");
    }


</script>



<style define:vars{{imageHeight}}>
    .card{
        padding: 5px 10px;
        
    }
    .card-content{
        padding: 6% 4% 2% 4%;
        
    }
    .card-description{
        font-family: "Chakra";
        color: var(--color4Light);
    }

    .tile-top{
        color:var(--color4Light);
        font-family: "Chakra";
        font-size: 16px;
    }

    .card-image{
        margin-top: 10px;
        margin-bottom: 10px;
        display: block;
        margin-left: auto;
        margin-right: auto;
        
    }
    .card-image-container:hover{
        cursor:zoom-in;
    }




</style>

